{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cartItems = [];\n    this.cartItemCountSubject = new BehaviorSubject(0);\n    // Observable to subscribe to changes in cart item count\n    this.cartItemCount$ = this.cartItemCountSubject.asObservable();\n  }\n  addToCart(item) {\n    this.cartItems.push(item);\n    this.incrementCartValue();\n  }\n  removeFromCart(item) {\n    this.cartItems = this.cartItems.filter(cartItem => cartItem !== item);\n    this.decrementCartValue();\n  }\n  getCartItems() {\n    return this.cartItems;\n  }\n  incrementCartValue() {\n    const currentItems = this.cartItemCountSubject.value;\n    this.cartItemCountSubject.next(currentItems + 1);\n  }\n  decrementCartValue() {\n    const currentItems = this.cartItemCountSubject.value;\n    this.cartItemCountSubject.next(currentItems - 1);\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)();\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,WAAW;EAHxBC;IAIU,cAAS,GAAU,EAAE;IACrB,yBAAoB,GAAG,IAAIF,eAAe,CAAS,CAAC,CAAC;IAE7D;IACA,mBAAc,GAAG,IAAI,CAACG,oBAAoB,CAACC,YAAY,EAAE;;EAEzDC,SAAS,CAACC,IAAS;IACjB,IAAI,CAACC,SAAS,CAACC,IAAI,CAACF,IAAI,CAAC;IACzB,IAAI,CAACG,kBAAkB,EAAE;EAC3B;EAEAC,cAAc,CAACJ,IAAS;IACtB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACI,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,KAAKN,IAAI,CAAC;IACvE,IAAI,CAACO,kBAAkB,EAAE;EAC3B;EAEAC,YAAY;IACV,OAAO,IAAI,CAACP,SAAS;EACvB;EAEQE,kBAAkB;IACxB,MAAMM,YAAY,GAAG,IAAI,CAACZ,oBAAoB,CAACa,KAAK;IACpD,IAAI,CAACb,oBAAoB,CAACc,IAAI,CAACF,YAAY,GAAG,CAAC,CAAC;EAClD;EAEQF,kBAAkB;IACxB,MAAME,YAAY,GAAG,IAAI,CAACZ,oBAAoB,CAACa,KAAK;IACpD,IAAI,CAACb,oBAAoB,CAACc,IAAI,CAACF,YAAY,GAAG,CAAC,CAAC;EAClD;;AA7BWd,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAiB,SAAXjB,WAAW;EAAAkB,YAFV;AAAM","names":["BehaviorSubject","CartService","constructor","cartItemCountSubject","asObservable","addToCart","item","cartItems","push","incrementCartValue","removeFromCart","filter","cartItem","decrementCartValue","getCartItems","currentItems","value","next","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\jeeva\\OneDrive\\Documents\\jk\\eCommerce\\src\\app\\services\\cart.service.ts"],"sourcesContent":["// cart.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n  private cartItems: any[] = [];\n  private cartItemCountSubject = new BehaviorSubject<number>(0);\n\n  // Observable to subscribe to changes in cart item count\n  cartItemCount$ = this.cartItemCountSubject.asObservable();\n\n  addToCart(item: any): void {\n    this.cartItems.push(item);\n    this.incrementCartValue();\n  }\n\n  removeFromCart(item: any): void {\n    this.cartItems = this.cartItems.filter((cartItem) => cartItem !== item);\n    this.decrementCartValue();\n  }\n\n  getCartItems(): any[] {\n    return this.cartItems;\n  }\n\n  private incrementCartValue(): void {\n    const currentItems = this.cartItemCountSubject.value;\n    this.cartItemCountSubject.next(currentItems + 1);\n  }\n\n  private decrementCartValue(): void {\n    const currentItems = this.cartItemCountSubject.value;\n    this.cartItemCountSubject.next(currentItems - 1);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}